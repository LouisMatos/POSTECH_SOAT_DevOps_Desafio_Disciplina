name: pipeline
on:
  push:

jobs:
  unit-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - run: mvn test

      - name: Generate JaCoCo Badge
        id: jacoco
        uses: cicirello/jacoco-badge-generator@v2.0.1
      - name: Log coverage percentage
        run: |
          echo "coverage = ${{ steps.jacoco.outputs.coverage }}"
          echo "branch coverage = ${{ steps.jacoco.outputs.branches }}"
      
      - name: Upload JaCoCo coverage report
        uses: actions/upload-artifact@v2
        with:
          name: jacoco-report
          path: target/site/jacoco/
  
  code-analisys:
    runs-on: ubuntu-latest
    needs: unit-test

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-key: ${{  runner.os }}-m2

#      - name: Build and Analyze
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=Devops-Fiap-ON
          

       
  build:
    runs-on: ubuntu-latest
    needs: code-analisys
    steps: 
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Package
      run: mvn package
  
  publish:
    runs-on: ubuntu-latest
    needs: build
    permissions: 
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
          package: '*.jar'
#      - name: Publish package
#        run: mvn --batch-mode deploy
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy-STG:
    runs-on: ubuntu-latest
    environment:
      name: stg 
    needs: publish

    if: github.ref == 'refs/heads/develop'
    steps:
      - name: Deploy
        shell: bash
        run: |
          echo "Deploy STG"
  
  Smoketest:
    runs-on: ubuntu-latest
    needs: deploy-STG
    environment:
      name: stg 

    if: github.ref == 'refs/heads/develop'
    steps: 
      - uses: actions/checkout@v3
      - name: Deploy 
        shell: bash
        run: |
          sh 'src/main/scripts/smoketest.sh'
  
  testesIntegrados:
    runs-on: ubuntu-latest
    needs: Smoketest
    environment:
      name: stg 

    if: github.ref == 'refs/heads/develop'
    steps:
      - uses: actions/checkout@v3
      - name: Deploy 
        shell: bash
        run: |
          sh 'src/main/scripts/testesIntegrados.sh'

  deploy-Pre:
    runs-on: ubuntu-latest

    if: github.ref == 'refs/heads/release'
    environment:
      name: pre
    needs: publish
    steps:
      - name: Deploy
        shell: bash
        run: |
          echo "Deploy PRE"
  
  SmoketestPre:
    runs-on: ubuntu-latest
    needs: deploy-Pre

    if: github.ref == 'refs/heads/release'
    steps: 
      - uses: actions/checkout@v3
      - name: Deploy 
        shell: bash
        run: |
          sh 'src/main/scripts/smoketest.sh'
  
  testesFuncionais:
    runs-on: ubuntu-latest
    needs: SmoketestPre

    if: github.ref == 'refs/heads/release'
    steps:
      - uses: actions/checkout@v3
      - name: Deploy 
        shell: bash
        run: |
          sh 'src/main/scripts/testesFuncionais.sh'

  deploy-Prod:
    runs-on: ubuntu-latest

    if: github.ref == 'refs/heads/main'
    environment:
      name: deploy-Prod
    needs: publish
    steps:
      - name: Deploy 
        shell: bash
        run: |
          echo "Deploy PROD"
  
  deploy-azure:
    needs: build
    name: Deploy-azure
    runs-on: ubuntu-latest
    environment: 
      name: AZURE-PRO
    steps:
      - name: Download JAR
        uses: actions/download-artifact@v3
        with:
          name: artifact
          path: target/
      - name: DeployAzure
        uses: azure/webapps-deploy@v2
        with:
          app-name: devopsfiap-on-app
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBISH_PROFILE }}
          package: '${{ github.workspace }}/target/*.jar'
  
  deploy-aws:
    needs: build
    name: Deploy-aws
    runs-on: ubuntu-latest
   
    steps:
      - name: Download JAR
        uses: actions/download-artifact@v3
        with:
          name: artifact
          path: target/
      - name: Display structure of download files
        run: ls -R
      - name: Deploy to EB
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          wait_for_environment_recovery: 90
          use_existing_version_if_available: true
          application_name: DevopsFiap-On
          environment_name: DevopsFiap-On-env-1
          version_label: ${{ github.SHA }}
          region: us-east-1
          deployment_package: ./target/data-0.0.1-SNAPSHOT.jar







